using log4net;
using log4net.Config;

public static class LoggingUtility
{
	private static readonly Dictionary<string, ILog> _loggers = new Dictionary<string, ILog>();

	private static object lockObject = new object();

	public static void Initialize()
	{
		XmlConfigurator.Configure();
	}

	public static void Initialize(string log4netConfig)
	{
		XmlConfigurator.Configure(new System.IO.FileInfo(log4netConfig));
	}
	
	public static ILog GetLogger(System.Type type)
	{
		lock (lockObject)
		{
			string name = type.FullName;
			if (!_loggers.ContainsKey(name))
			{
				_loggers.Add(name, LogManager.GetLogger(type));
			}

			return _loggers[name];
		}
	}

	public static ILog GetLogger(string name)
	{
		lock (lockObject)
		{
			if (!_loggers.ContainsKey(name))
			{
				_loggers.Add(name, LogManager.GetLogger(name));
			}

			return _loggers[name];
		}
	}
}

