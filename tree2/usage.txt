
<wicket:container wicket:id="rdgrp1">
    <span wicket:id="tree1"></span>
</wicket:container>
<input type="button" wicket:id="mybutton" value="Click!!" />


//-------------------------------------------------------------------------------------------------------
private ExRadioGroup rdgrp1;
private ExDefaultNestedTree tree1;


        this.rdgrp1 = new ExRadioGroup("dummy", new Model(""));

        this.tree1 = new ExDefaultNestedTree("tree1", new ExDefaultProvider()){
            private static final long serialVersionUID = 1L;

            @Override
            protected Component newContentComponent(String id, IModel<ExDefaultNode> model)
            {
                //return new Folder(id, this, model);
                MyPanel panel = new MyPanel(id, model);
                return panel;
            }
        };
        this.rdgrp1.add(this.tree1);
        form.add(this.rdgrp1);

        MyNode root1 = new MyNode("1","G-1","Google","ABC");
        root1.add(new MyNode("1-1","G-2","Google","DEF"));
        root1.add(new MyNode("1-2","G-2","Google","GHI"));
        ExDefaultNode root2 = new MyNode("2","G-1","Google","JKL");
        root2.add(new MyNode("2-1","G-2","Google","MNO"));
        root2.add(new MyNode("2-2","G-2","Google","PQR"));
        this.tree1.getProvider().setNodeList(new ArrayList<>(Arrays.asList(root1,root2)));
        this.tree1.expandAll();

        final ExAjaxButton btn = new ExAjaxButton("mybutton", form){
            private static final long serialVersionUID = 1L;

            @Override
            protected void onSubmit(AjaxRequestTarget target, Form<?> form){
                test(target, form);
            }
        };
        form.add(btn);


    private void test(AjaxRequestTarget target, Form<?> form){
        Iterator<ExDefaultNode> it = this.tree1.getProvider().getRoots();
        while(it.hasNext()) {
            MyNode node = (MyNode)it.next();
            this.debugprint(node);
        }
    }

    private void debugprint(MyNode node){
        String selected = (node.isChecked()) ? "*" : "";
        String s = String.format("label: %s\t group: %s\t select: %s\t text: %s",
                   node.getLabel() + selected, node.getRadioGroup(), node.getSelectValue(), node.getTextValue());
        System.out.println(s);

        List<ExDefaultNode> nlist = node.getChildNodes();
        if (nlist.size() > 0) {
            nlist.forEach(n -> ExComponentsOnExFormTestPage.this.debugprint((MyNode)n));
        }
    }

//-------------------------------------------------------------------------------------------------------


